/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package net.sareweb.emg.model;

import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Draw service. Represents a row in the &quot;EuroMillionGame_Draw&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link net.sareweb.emg.model.impl.DrawModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link net.sareweb.emg.model.impl.DrawImpl}.
 * </p>
 *
 * @author A.Galdos
 * @see Draw
 * @see net.sareweb.emg.model.impl.DrawImpl
 * @see net.sareweb.emg.model.impl.DrawModelImpl
 * @generated
 */
public interface DrawModel extends BaseModel<Draw> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a draw model instance should use the {@link Draw} interface instead.
	 */

	/**
	 * Returns the primary key of this draw.
	 *
	 * @return the primary key of this draw
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this draw.
	 *
	 * @param primaryKey the primary key of this draw
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the draw ID of this draw.
	 *
	 * @return the draw ID of this draw
	 */
	public long getDrawId();

	/**
	 * Sets the draw ID of this draw.
	 *
	 * @param drawId the draw ID of this draw
	 */
	public void setDrawId(long drawId);

	/**
	 * Returns the number1 of this draw.
	 *
	 * @return the number1 of this draw
	 */
	public int getNumber1();

	/**
	 * Sets the number1 of this draw.
	 *
	 * @param number1 the number1 of this draw
	 */
	public void setNumber1(int number1);

	/**
	 * Returns the number2 of this draw.
	 *
	 * @return the number2 of this draw
	 */
	public int getNumber2();

	/**
	 * Sets the number2 of this draw.
	 *
	 * @param number2 the number2 of this draw
	 */
	public void setNumber2(int number2);

	/**
	 * Returns the number3 of this draw.
	 *
	 * @return the number3 of this draw
	 */
	public int getNumber3();

	/**
	 * Sets the number3 of this draw.
	 *
	 * @param number3 the number3 of this draw
	 */
	public void setNumber3(int number3);

	/**
	 * Returns the number4 of this draw.
	 *
	 * @return the number4 of this draw
	 */
	public int getNumber4();

	/**
	 * Sets the number4 of this draw.
	 *
	 * @param number4 the number4 of this draw
	 */
	public void setNumber4(int number4);

	/**
	 * Returns the number5 of this draw.
	 *
	 * @return the number5 of this draw
	 */
	public int getNumber5();

	/**
	 * Sets the number5 of this draw.
	 *
	 * @param number5 the number5 of this draw
	 */
	public void setNumber5(int number5);

	/**
	 * Returns the star1 of this draw.
	 *
	 * @return the star1 of this draw
	 */
	public int getStar1();

	/**
	 * Sets the star1 of this draw.
	 *
	 * @param star1 the star1 of this draw
	 */
	public void setStar1(int star1);

	/**
	 * Returns the star2 of this draw.
	 *
	 * @return the star2 of this draw
	 */
	public int getStar2();

	/**
	 * Sets the star2 of this draw.
	 *
	 * @param star2 the star2 of this draw
	 */
	public void setStar2(int star2);

	/**
	 * Returns the number1 guess of this draw.
	 *
	 * @return the number1 guess of this draw
	 */
	public int getNumber1Guess();

	/**
	 * Sets the number1 guess of this draw.
	 *
	 * @param number1Guess the number1 guess of this draw
	 */
	public void setNumber1Guess(int number1Guess);

	/**
	 * Returns the number2 guess of this draw.
	 *
	 * @return the number2 guess of this draw
	 */
	public int getNumber2Guess();

	/**
	 * Sets the number2 guess of this draw.
	 *
	 * @param number2Guess the number2 guess of this draw
	 */
	public void setNumber2Guess(int number2Guess);

	/**
	 * Returns the number3 guess of this draw.
	 *
	 * @return the number3 guess of this draw
	 */
	public int getNumber3Guess();

	/**
	 * Sets the number3 guess of this draw.
	 *
	 * @param number3Guess the number3 guess of this draw
	 */
	public void setNumber3Guess(int number3Guess);

	/**
	 * Returns the number4 guess of this draw.
	 *
	 * @return the number4 guess of this draw
	 */
	public int getNumber4Guess();

	/**
	 * Sets the number4 guess of this draw.
	 *
	 * @param number4Guess the number4 guess of this draw
	 */
	public void setNumber4Guess(int number4Guess);

	/**
	 * Returns the number5 guess of this draw.
	 *
	 * @return the number5 guess of this draw
	 */
	public int getNumber5Guess();

	/**
	 * Sets the number5 guess of this draw.
	 *
	 * @param number5Guess the number5 guess of this draw
	 */
	public void setNumber5Guess(int number5Guess);

	/**
	 * Returns the star1 guess of this draw.
	 *
	 * @return the star1 guess of this draw
	 */
	public int getStar1Guess();

	/**
	 * Sets the star1 guess of this draw.
	 *
	 * @param star1Guess the star1 guess of this draw
	 */
	public void setStar1Guess(int star1Guess);

	/**
	 * Returns the star2 guess of this draw.
	 *
	 * @return the star2 guess of this draw
	 */
	public int getStar2Guess();

	/**
	 * Sets the star2 guess of this draw.
	 *
	 * @param star2Guess the star2 guess of this draw
	 */
	public void setStar2Guess(int star2Guess);

	/**
	 * Returns the draw date of this draw.
	 *
	 * @return the draw date of this draw
	 */
	public Date getDrawDate();

	/**
	 * Sets the draw date of this draw.
	 *
	 * @param drawDate the draw date of this draw
	 */
	public void setDrawDate(Date drawDate);

	/**
	 * Returns the modify date of this draw.
	 *
	 * @return the modify date of this draw
	 */
	public Date getModifyDate();

	/**
	 * Sets the modify date of this draw.
	 *
	 * @param modifyDate the modify date of this draw
	 */
	public void setModifyDate(Date modifyDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Draw draw);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Draw> toCacheModel();

	@Override
	public Draw toEscapedModel();

	@Override
	public Draw toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}