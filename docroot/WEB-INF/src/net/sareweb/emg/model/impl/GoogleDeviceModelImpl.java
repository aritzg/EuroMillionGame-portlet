/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package net.sareweb.emg.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import net.sareweb.emg.model.GoogleDevice;
import net.sareweb.emg.model.GoogleDeviceModel;
import net.sareweb.emg.model.GoogleDeviceSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the GoogleDevice service. Represents a row in the &quot;EuroMillionGame_GoogleDevice&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link net.sareweb.emg.model.GoogleDeviceModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link GoogleDeviceImpl}.
 * </p>
 *
 * @author A.Galdos
 * @see GoogleDeviceImpl
 * @see net.sareweb.emg.model.GoogleDevice
 * @see net.sareweb.emg.model.GoogleDeviceModel
 * @generated
 */
@JSON(strict = true)
public class GoogleDeviceModelImpl extends BaseModelImpl<GoogleDevice>
	implements GoogleDeviceModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a google device model instance should use the {@link net.sareweb.emg.model.GoogleDevice} interface instead.
	 */
	public static final String TABLE_NAME = "EuroMillionGame_GoogleDevice";
	public static final Object[][] TABLE_COLUMNS = {
			{ "googleDeviceId", Types.BIGINT },
			{ "emailAddress", Types.VARCHAR },
			{ "registrationId", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table EuroMillionGame_GoogleDevice (googleDeviceId LONG not null primary key,emailAddress VARCHAR(75) null,registrationId VARCHAR(75) null,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table EuroMillionGame_GoogleDevice";
	public static final String ORDER_BY_JPQL = " ORDER BY googleDevice.googleDeviceId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY EuroMillionGame_GoogleDevice.googleDeviceId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.net.sareweb.emg.model.GoogleDevice"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.net.sareweb.emg.model.GoogleDevice"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.net.sareweb.emg.model.GoogleDevice"),
			true);
	public static long EMAILADDRESS_COLUMN_BITMASK = 1L;
	public static long REGISTRATIONID_COLUMN_BITMASK = 2L;
	public static long GOOGLEDEVICEID_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static GoogleDevice toModel(GoogleDeviceSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		GoogleDevice model = new GoogleDeviceImpl();

		model.setGoogleDeviceId(soapModel.getGoogleDeviceId());
		model.setEmailAddress(soapModel.getEmailAddress());
		model.setRegistrationId(soapModel.getRegistrationId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<GoogleDevice> toModels(GoogleDeviceSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<GoogleDevice> models = new ArrayList<GoogleDevice>(soapModels.length);

		for (GoogleDeviceSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.net.sareweb.emg.model.GoogleDevice"));

	public GoogleDeviceModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _googleDeviceId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setGoogleDeviceId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _googleDeviceId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return GoogleDevice.class;
	}

	@Override
	public String getModelClassName() {
		return GoogleDevice.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("googleDeviceId", getGoogleDeviceId());
		attributes.put("emailAddress", getEmailAddress());
		attributes.put("registrationId", getRegistrationId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long googleDeviceId = (Long)attributes.get("googleDeviceId");

		if (googleDeviceId != null) {
			setGoogleDeviceId(googleDeviceId);
		}

		String emailAddress = (String)attributes.get("emailAddress");

		if (emailAddress != null) {
			setEmailAddress(emailAddress);
		}

		String registrationId = (String)attributes.get("registrationId");

		if (registrationId != null) {
			setRegistrationId(registrationId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@JSON
	@Override
	public long getGoogleDeviceId() {
		return _googleDeviceId;
	}

	@Override
	public void setGoogleDeviceId(long googleDeviceId) {
		_googleDeviceId = googleDeviceId;
	}

	@JSON
	@Override
	public String getEmailAddress() {
		if (_emailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailAddress;
		}
	}

	@Override
	public void setEmailAddress(String emailAddress) {
		_columnBitmask |= EMAILADDRESS_COLUMN_BITMASK;

		if (_originalEmailAddress == null) {
			_originalEmailAddress = _emailAddress;
		}

		_emailAddress = emailAddress;
	}

	public String getOriginalEmailAddress() {
		return GetterUtil.getString(_originalEmailAddress);
	}

	@JSON
	@Override
	public String getRegistrationId() {
		if (_registrationId == null) {
			return StringPool.BLANK;
		}
		else {
			return _registrationId;
		}
	}

	@Override
	public void setRegistrationId(String registrationId) {
		_columnBitmask |= REGISTRATIONID_COLUMN_BITMASK;

		if (_originalRegistrationId == null) {
			_originalRegistrationId = _registrationId;
		}

		_registrationId = registrationId;
	}

	public String getOriginalRegistrationId() {
		return GetterUtil.getString(_originalRegistrationId);
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			GoogleDevice.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public GoogleDevice toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (GoogleDevice)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		GoogleDeviceImpl googleDeviceImpl = new GoogleDeviceImpl();

		googleDeviceImpl.setGoogleDeviceId(getGoogleDeviceId());
		googleDeviceImpl.setEmailAddress(getEmailAddress());
		googleDeviceImpl.setRegistrationId(getRegistrationId());
		googleDeviceImpl.setCreateDate(getCreateDate());
		googleDeviceImpl.setModifiedDate(getModifiedDate());

		googleDeviceImpl.resetOriginalValues();

		return googleDeviceImpl;
	}

	@Override
	public int compareTo(GoogleDevice googleDevice) {
		long primaryKey = googleDevice.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof GoogleDevice)) {
			return false;
		}

		GoogleDevice googleDevice = (GoogleDevice)obj;

		long primaryKey = googleDevice.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		GoogleDeviceModelImpl googleDeviceModelImpl = this;

		googleDeviceModelImpl._originalEmailAddress = googleDeviceModelImpl._emailAddress;

		googleDeviceModelImpl._originalRegistrationId = googleDeviceModelImpl._registrationId;

		googleDeviceModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<GoogleDevice> toCacheModel() {
		GoogleDeviceCacheModel googleDeviceCacheModel = new GoogleDeviceCacheModel();

		googleDeviceCacheModel.googleDeviceId = getGoogleDeviceId();

		googleDeviceCacheModel.emailAddress = getEmailAddress();

		String emailAddress = googleDeviceCacheModel.emailAddress;

		if ((emailAddress != null) && (emailAddress.length() == 0)) {
			googleDeviceCacheModel.emailAddress = null;
		}

		googleDeviceCacheModel.registrationId = getRegistrationId();

		String registrationId = googleDeviceCacheModel.registrationId;

		if ((registrationId != null) && (registrationId.length() == 0)) {
			googleDeviceCacheModel.registrationId = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			googleDeviceCacheModel.createDate = createDate.getTime();
		}
		else {
			googleDeviceCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			googleDeviceCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			googleDeviceCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return googleDeviceCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{googleDeviceId=");
		sb.append(getGoogleDeviceId());
		sb.append(", emailAddress=");
		sb.append(getEmailAddress());
		sb.append(", registrationId=");
		sb.append(getRegistrationId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("net.sareweb.emg.model.GoogleDevice");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>googleDeviceId</column-name><column-value><![CDATA[");
		sb.append(getGoogleDeviceId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailAddress</column-name><column-value><![CDATA[");
		sb.append(getEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>registrationId</column-name><column-value><![CDATA[");
		sb.append(getRegistrationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = GoogleDevice.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			GoogleDevice.class
		};
	private long _googleDeviceId;
	private String _emailAddress;
	private String _originalEmailAddress;
	private String _registrationId;
	private String _originalRegistrationId;
	private Date _createDate;
	private Date _modifiedDate;
	private long _columnBitmask;
	private GoogleDevice _escapedModel;
}